@page "/"
@layout Components.Layout.BlankLayout

<div class="grid-parent">

    <div class="content-center border border-secondary rounded p-4">

        <h2>Nae Time</h2>
        <p>The Scottish FPV Timing System</p>
        <hr class="mt-0" />

        @if (_localValues.Any())
        {
            <h5>Local Configuration</h5>
            <hr class="mt-0" />
            <div>
                @foreach (var propertyTuple in _localValues)
                {
                    <div>
                        @propertyTuple.property.DisplayName
                    </div>
                    <div>
                        @if (propertyTuple.property.ValueType == typeof(string))
                        {
                            <input type="text" class="w-100" value="@propertyTuple.value.Value" @onchange="@(x=> propertyTuple.value.Value = x.Value?.ToString())" />
                        }
                        else
                        {
                            <div>Type not supported</div>
                        }
                    </div>
                    @if (_localValidationErrors.TryGetValue(propertyTuple.property.Id, out var error))
                    {
                        <div class="text-warning">
                            @error
                        </div>
                    }

                }
            </div>
        }
        @if (_offsiteValues.Any())
        {
            <h5>Local Configuration</h5>
            <hr class="mt-0" />
            <div>
                @foreach (var propertyTuple in _offsiteValues)
                {
                    <label>
                        @propertyTuple.property.DisplayName
                    </label>
                    <div>
                        @if (propertyTuple.property.ValueType == typeof(string))
                        {
                            <input type="text" class="w-100" value="@propertyTuple.value.Value" @onchange="@(x=> propertyTuple.value.Value = x.Value?.ToString())" />
                        }
                        else
                        {
                            <div>Type not supported</div>
                        }
                    </div>
                    @if (_offsiteValidationErrors.TryGetValue(propertyTuple.property.Id, out var error))
                    {
                        <div class="text-warning">
                            @error
                        </div>
                    }

                }
            </div>
        }
        
        <div class="w-100 text-center mt-5">
            <button type="button" class="btn btn-primary" @onclick="OnClickConnect">Connect</button>
            <label>Skip Configuration</label>
            <input type="checkbox" @bind-value="IsSkipConfigurationPageSet" />
        </div>

    </div>

</div>