@page "/stream"
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Charts
@using Microsoft.AspNetCore.SignalR.Client

@inject NavigationManager NavigationManager

@foreach(var streamKvp in _readings)
{
    <SfChart Width="100%">
        <ChartSeriesCollection>
            <ChartSeries DataSource="@streamKvp.Value" XName="Tick" YName ="Value">

            </ChartSeries>
        </ChartSeriesCollection>
    </SfChart>
}


@code
{
    private HubConnection? hubConnection;
    private List<string> messages = new List<string>();
    private string? userInput;
    private string? messageInput;

    private int maxReadings = 100; //TODO calculate from time 100 = 10 seconds as 100 wait period on processor means a value every 100ms

    private Dictionary<Guid, List<RssiStreamReadingDto>> _readings = new ();    

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/clienthub"))
            .Build();

        hubConnection.On<List<RssiStreamReadingDto>>("ReceiveReading", (readings) =>
        {
            foreach(var streamReadingDto in readings)
            {
                if(!_readings.TryGetValue(streamReadingDto.StreamId,out var streamReadings))
                {
                    streamReadings = new List<RssiStreamReadingDto>();
                    _readings.Add(streamReadingDto.StreamId, streamReadings);
                }

                streamReadings.Add(streamReadingDto);

                while(streamReadings.Count >= maxReadings)
                {
                    streamReadings.RemoveAt(0);
                }
            }
           
            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();
    }

}