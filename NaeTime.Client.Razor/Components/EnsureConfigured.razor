@using NaeTime.Client.Razor.Lib.Abstractions
@code
{

    [Inject]
    public ILocalApiConfiguration LocalApiConfiguration { get; set; } = null!;
    [Inject]
    public IOffSiteApiConfiguration OffSiteApiConfiguration { get; set; } = null!;

    [Inject]
    public NavigationManager NavigationManager { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        bool isLocalEnabled = await LocalApiConfiguration.IsEnabledAsync();
        bool isOffsiteEnabled = await OffSiteApiConfiguration.IsEnabledAsync();

        if(!isLocalEnabled && !isOffsiteEnabled)
        {
            NavigateToConfiguration();
        }

        if(isLocalEnabled)
        {
            bool isLocalValid = await LocalApiConfiguration.IsCurrentConfigurationValidAsync();
            if(!isLocalValid)
            {
                NavigateToConfiguration();
            }   
        }

        if(isOffsiteEnabled)
        {
            bool isOffsiteValid = await OffSiteApiConfiguration.IsCurrentConfigurationValidAsync();
            if(!isOffsiteValid)
            {
                NavigateToConfiguration();
            }   
        }

        await base.OnInitializedAsync();
    }
    private void NavigateToConfiguration()
    {
        NavigationManager.NavigateTo("/configuration?force=true");
    }
}