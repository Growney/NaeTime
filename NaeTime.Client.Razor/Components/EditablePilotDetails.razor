@using Microsoft.AspNetCore.Components.Forms
@using NaeTime.Client.Razor.Lib.Models
<Microsoft.AspNetCore.Components.Forms.EditForm EditContext="_editContext" OnValidSubmit="HandleValidSubmit">
    <div>

        <label>Firstname</label>
        <div>

            <Microsoft.AspNetCore.Components.Forms.InputText @bind-Value="Details.FirstName" />
            <Microsoft.AspNetCore.Components.Forms.ValidationMessage For="@(() => Details.FirstName)" />
        </div>
    </div>
    <div class="mt-2">
        <label>Lastname</label>
        <div>
            <Microsoft.AspNetCore.Components.Forms.InputText @bind-Value="Details.LastName" />
            <Microsoft.AspNetCore.Components.Forms.ValidationMessage For="@(() => Details.LastName)" />
        </div>
    </div>
    <div class="mt-2">
        <label>Callsign</label>
        <div>
            <Microsoft.AspNetCore.Components.Forms.InputText @bind-Value="Details.CallSign" />
            <Microsoft.AspNetCore.Components.Forms.ValidationMessage For="@(() => Details.CallSign)" />
        </div>
    </div>

    <div class="mt-3">
        <button type="submit" class="btn btn-primary">Save</button>
    </div>

</Microsoft.AspNetCore.Components.Forms.EditForm>

@code{
    [Parameter]
    [EditorRequired]
    public Func<Pilot,Task> OnValidSubmit { get; set; } = null!;

    [Parameter]
    [EditorRequired]
    public Pilot Details { get; set; } = null!;

    private EditContext? _editContext;

    protected override void OnParametersSet()
    {
        _editContext = new EditContext(Details);
        base.OnParametersSet();
    }

    private Task HandleValidSubmit()
    {
        return OnValidSubmit?.Invoke(Details) ?? Task.CompletedTask;
    }
}