<div class="shadow rounded-3 m-2 p-2" style="width: 200px">
    <div class="container">
        <div class="row">
            <div class="col">
                <Switch ValueChanged="EnabledChanged" Value=Configuration.IsEnabled ValueExpression="()=>Configuration.IsEnabled"></Switch>
            </div>
            <div class="col text-end">
                <h3>@Configuration.LaneNumber</h3>
            </div>
        </div>
    </div>
    <fieldset disable="@(Configuration.IsEnabled?"false":"true")">
        <div>
            <Dropdown Class="w-100">
                <DropdownToggleButton Color="ButtonColor.Primary">@GetPilotString(Configuration.PilotId)</DropdownToggleButton>
                    <DropdownMenu>
                        @foreach (var pilot in Pilots)
                    {
                        <DropdownItem Type="ButtonType.Button" @onclick="() => SetPilot(pilot.Id)">@GetPilotString(pilot.Id)</DropdownItem>
                    }
                </DropdownMenu>
            </Dropdown>
        </div>
        <div>
            RSSI: @_laneRSSIValue
        </div>
        <div>
        </div>
        <div>
            <div class="container">
                <div class="row">
                    <div class="col px-0">
                        <Dropdown Class="w-100">
                            <DropdownToggleButton Class="rounded-0 rounded-start" Color="ButtonColor.Secondary">@GetBandString()</DropdownToggleButton>
                                <DropdownMenu>
                                    @foreach (var band in Messages.Frequency.Band.Bands)
                                {
                                    <DropdownItem Type="ButtonType.Button" @onclick="() => GoToBand(band.Id)">@band.Name</DropdownItem>
                                }
                            </DropdownMenu>
                        </Dropdown>
                    </div>
                    <div class="col px-0">
                        @if (Messages.Frequency.Band.Bands.Any(x => x.Id == Configuration.BandId))
                        {
                            <Dropdown Class="w-100">
                                <DropdownToggleButton Class="rounded-0 rounded-end" Color="ButtonColor.Primary">@GetFrequencyString()</DropdownToggleButton>
                                    <DropdownMenu>
                                        @{
                                        var band = Messages.Frequency.Band.Bands.First(b => b.Id == Configuration.BandId);
                                        foreach (var frequency in band.Frequencies)
                                        {
                                            <DropdownItem Type="ButtonType.Button" @onclick="() => GoToFrequency(frequency.FrequencyInMhz)">@frequency.Name</DropdownItem>
                                        }
                                    }
                                </DropdownMenu>
                            </Dropdown>
                        }
                        else
                        {
                            <NumberInput Class="rounded-0 rounded-end" TValue=int ValueChanged="GoToFrequency" Value="Configuration.FrequencyInMhz" ValueExpression="() => Configuration.FrequencyInMhz"></NumberInput>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div>
            Frequency: @Configuration.FrequencyInMhz
        </div>
        <div>
            <Button Type="ButtonType.Button" Color="ButtonColor.Primary" @onclick="() => TriggerDetection(0)">Trigger</Button>
        </div>
    </fieldset>
</div>
