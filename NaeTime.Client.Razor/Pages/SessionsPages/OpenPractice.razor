@page "/openpractice"
@layout MainLayout
<div>
    <h1>Open Practice</h1>
    <Dropdown>
        <DropdownToggleButton Color="ButtonColor.Primary">Start Session On</DropdownToggleButton>
            <DropdownMenu>
                @foreach(var track in _tracks)
                {
                    <DropdownItem Type="ButtonType.Button" @onclick="() => StartNewSessionOnTrack(Guid.NewGuid(),track.Id,track.MinimumLapTimeMilliseconds,track.MaximumLapTimeMilliseconds)">@track.Name</DropdownItem>
                }
                <DropdownItem Type="ButtonType.Button" @onclick="() => StartSessionOnNewTrack()">[New Track]</DropdownItem>
            </DropdownMenu>
    </Dropdown>
    <Dropdown>
        <DropdownToggleButton Color="ButtonColor.Primary">@GetActiveSessionName()</DropdownToggleButton>
        <DropdownMenu>
            @foreach (var session in _sessionDetails)
            {
                <DropdownItem Type="ButtonType.Button" @onclick="() => SetupForSession(session.Id)">@session.Name</DropdownItem>
            }
        </DropdownMenu>
    </Dropdown>
</div>

@if(_selectedSession == null)
{
    <h3>No active session</h3>
}
else
{
    @if(_selectedSession.Id == _activeSessionId)
    {
        <div class="lane-container">
            @foreach (var laneConfiguration in _selectedSession.Lanes)
            {
                <SessionLaneConfiguration 
                    Pilots="_pilots"
                    LaneNumber="laneConfiguration.LaneNumber"
                    PilotId="laneConfiguration.PilotId"
                    RssiValue="laneConfiguration.RssiValue"
                    MaxRSSIValue="laneConfiguration.MaxRssiValue"
                    BandId="laneConfiguration.BandId"
                    FrequencyInMhz="laneConfiguration.FrequencyInMhz"
                    IsEnabled="laneConfiguration.IsEnabled"
                    LapStart="laneConfiguration.LapStarted"

                    OnFrequencyChanged="(bandId,frequencyInMhz) => OnLaneFrequyencyChanged(laneConfiguration.LaneNumber,bandId,frequencyInMhz)"
                    OnEnabledChanged="enabled => OnLaneEnabledChanged(laneConfiguration.LaneNumber,enabled)"
                    OnPilotChanged="pilotId => OnLanePilotChanged(laneConfiguration.LaneNumber, pilotId)"
                    OnDetectionTriggered="split => OnLaneDetectionTriggered(laneConfiguration.LaneNumber, split)"
                    OnInvalidateTriggered="split => OnLaneInvalidateTriggered(laneConfiguration.LaneNumber,split)">
                </SessionLaneConfiguration>
            }
        </div>
    }
   <h3>Leaderboards</h3>
    <hr />
    @if (!_selectedSession.SingleLapLeaderboards.Any())
    {
        <Button Color=ButtonColor.Primary @onclick="AddSingleLapLeaderboard">Add Single Lap</Button>
    }
    <Dropdown>
        <DropdownToggleButton Color="ButtonColor.Primary">Add Consecutive Laps</DropdownToggleButton>
        <DropdownMenu>
            @{
                uint[] laps = [2,3,4,5,6,7,8,9,10];
                foreach(var lap in laps)
                {
                    if (!_selectedSession.ConsecutiveLapLeaderboards.Any(x => x.ConsecutiveLaps == lap))
                    {
                        <DropdownItem Type="ButtonType.Button" @onclick="() => AddConsecutiveLapsLeaderboard(lap)">@lap</DropdownItem>
                    }
                }
            }
        </DropdownMenu>
    </Dropdown>
    <div class="lane-container"> 
        
        @foreach(var singleLapLeaderboard in _selectedSession.SingleLapLeaderboards)
        {
            <div class="shadow-sm p-3">
                <SingleLapLeaderboard Positions="singleLapLeaderboard.Positions"></SingleLapLeaderboard>
            </div>
        }
        @foreach (var consecutiveLapLeaderboards in _selectedSession.ConsecutiveLapLeaderboards.OrderBy(x=>x.ConsecutiveLaps))
        {
            <div class="shadow-sm p-3">
                <ConsecutiveLapsLeaderboard Leaderboard="consecutiveLapLeaderboards"></ConsecutiveLapsLeaderboard>
            </div>
        }
    </div>
    
    <h3>Laps</h3>
    <hr />
    <LapList SessionId="_selectedSession.Id" Laps="_selectedSession.Laps" IncludePilot=true></LapList>

}

