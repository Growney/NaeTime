// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NaeTime.Hardware.SQLite;

#nullable disable

namespace NaeTime.Hardware.SQLite.Migrations
{
    [DbContext(typeof(HardwareDbContext))]
    [Migration("20240310211530_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("NaeTime.Hardware.SQLite.Models.EthernetLapRF8Channel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("IpAddress")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("EthernetLapRF8Channels");
                });

            modelBuilder.Entity("NaeTime.Hardware.SQLite.Models.TimerStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ConnectionStatusChanged")
                        .HasColumnType("TEXT");

                    b.Property<bool>("WasConnected")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TimerStatuses");
                });

            modelBuilder.Entity("NaeTime.Persistence.SQLite.Models.Detection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("HardwareTime")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsManual")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Lane")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SoftwareTime")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TimerId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UtcTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Detections");
                });
#pragma warning restore 612, 618
        }
    }
}
