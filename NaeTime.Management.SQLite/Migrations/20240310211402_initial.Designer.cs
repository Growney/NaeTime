// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NaeTime.Management.SQLite;

#nullable disable

namespace NaeTime.Management.SQLite.Migrations
{
    [DbContext(typeof(ManagementDbContext))]
    [Migration("20240310211402_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("NaeTime.Management.SQLite.Models.ActiveSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("SessionType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ActiveSession");
                });

            modelBuilder.Entity("NaeTime.Management.SQLite.Models.Pilot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CallSign")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pilots");
                });

            modelBuilder.Entity("NaeTime.Management.SQLite.Models.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<byte>("AllowedLanes")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MaximumLapMilliseconds")
                        .HasColumnType("INTEGER");

                    b.Property<long>("MinimumLapMilliseconds")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("NaeTime.Management.SQLite.Models.TrackTimer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TimerId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TrackId");

                    b.ToTable("TrackTimer");
                });

            modelBuilder.Entity("NaeTime.Management.SQLite.Models.TrackTimer", b =>
                {
                    b.HasOne("NaeTime.Management.SQLite.Models.Track", null)
                        .WithMany("Timers")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NaeTime.Management.SQLite.Models.Track", b =>
                {
                    b.Navigation("Timers");
                });
#pragma warning restore 612, 618
        }
    }
}
