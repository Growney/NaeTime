// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NaeTime.Timing.SQLite;

#nullable disable

namespace NaeTime.Timing.SQLite.Migrations
{
    [DbContext(typeof(TimingDbContext))]
    [Migration("20240310211114_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("NaeTime.Timing.SQLite.Models.ActiveLap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ActiveTimingsId")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("StartedHardwareTime")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StartedSoftwareTime")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartedUtcTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActiveTimingsId")
                        .IsUnique();

                    b.ToTable("ActiveLap");
                });

            modelBuilder.Entity("NaeTime.Timing.SQLite.Models.ActiveSplit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ActiveTimingsId")
                        .HasColumnType("TEXT");

                    b.Property<byte>("SplitNumber")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StartedSoftwareTime")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartedUtcTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActiveTimingsId")
                        .IsUnique();

                    b.ToTable("ActiveSplit");
                });

            modelBuilder.Entity("NaeTime.Timing.SQLite.Models.ActiveTimings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<byte>("Lane")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("LapNumber")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ActiveTimings");
                });

            modelBuilder.Entity("NaeTime.Timing.SQLite.Models.Lane", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<byte?>("BandId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FrequencyInMhz")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Lanes");
                });

            modelBuilder.Entity("NaeTime.Timing.SQLite.Models.ActiveLap", b =>
                {
                    b.HasOne("NaeTime.Timing.SQLite.Models.ActiveTimings", null)
                        .WithOne("ActiveLap")
                        .HasForeignKey("NaeTime.Timing.SQLite.Models.ActiveLap", "ActiveTimingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NaeTime.Timing.SQLite.Models.ActiveSplit", b =>
                {
                    b.HasOne("NaeTime.Timing.SQLite.Models.ActiveTimings", null)
                        .WithOne("ActiveSplit")
                        .HasForeignKey("NaeTime.Timing.SQLite.Models.ActiveSplit", "ActiveTimingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NaeTime.Timing.SQLite.Models.ActiveTimings", b =>
                {
                    b.Navigation("ActiveLap");

                    b.Navigation("ActiveSplit");
                });
#pragma warning restore 612, 618
        }
    }
}
